{"name":"whatlastgenre","tagline":"Improves genre metadata of audio files based on tags from various music sites.","body":"# whatlastgenre\r\n\r\nImproves genre metadata of audio files based on tags from various music sites.\r\n\r\n* Supported audio files: flac, ogg, mp3, m4a\r\n* Supported music sites: WhatCD, LastFM, MusicBrainz, Discogs, EchoNest, Idiomag\r\n* Feature Overview\r\n  * Gets genre tags for artists and albums from music sites and finds the most\r\n  eligible ones by merging, splitting, filtering and scoring them.\r\n    * Heavy filtering of crappy tags to not need a whitelist\r\n    * Merges similar tags in different writings to ensure consistent names, eg.\r\n    DnB, D&B, Drum and Bass -> Drum & Bass;\r\n    Alt., Altern, Alterneitif -> Alternative\r\n    * Splits tags in various applicable ways, eg.\r\n    Jazz/Funk&Rock -> Jazz, Funk, Rock; Alternative Rock -> Alternative, Rock\r\n    * Filters by personal preferences with preset and custom filters\r\n    * Scores tags while taking personal preferences into account\r\n  * Caches all data received from music sites to make reruns super fast\r\n  * Makes use of MusicBrainz IDs when possible\r\n  * Optional: gets release type (Album, EP, Anthology, ...) (from What)\r\n  * Optional: gets MusicBrainz IDs\r\n  * Interactive mode (it's not guessing wrong data)\r\n  * Dry-mode for safe testing\r\n\r\n\r\n## How it works\r\nIt scans through folders for albums and receives genre tags for them and their\r\nartists from different music sites. Equal tags in different writings will be\r\nmerged together to ensure proper scoring and consistent names. Tags containing\r\nseparators, too many words or specific parts will get split up. The tags get\r\nfiltered and scored. Artist and album tags get stored separately at first, but\r\nget merged in the end and the best scored tags will be saved as genre metadata\r\nin the corresponding album tracks. All data received from music sites will get\r\ncached so that rerunning the script will be super fast. There are several\r\nscore multipliers to adjust the scoring to your needs and take your personal\r\npreferences into account. Please take a look at \"Configuration options\r\nexplained\" below for more details.\r\n\r\n##### Tags scoring with count (Last.FM, MusicBrainz, Idiomag, What partially)\r\nIf counts are supplied for the tags they will get scored by `count/topcount`,\r\nwhere `topcount` is the highest count of all tags from a source. So the top\r\ntag gets a score of 1.0, a tag having only half of the top tag's count gets\r\na score of 0.5 and so on.\r\n\r\n##### Tags scoring without count (Discogs, EchoNest, What partially)\r\nTags supplied without a count will be scored `0.85^(n-1)`, where `n` is the\r\ntotal number of tags supplied by this source. The more tags the lower the score\r\nfor each tag will be. So if only one tag is supplied, it will get a score of\r\n1.0, two tags will get a score of 0.85 each, three get 0.72 each and so on...\r\n\r\n\r\n## Installation\r\nYou'll need Python 2.7.\r\n\r\nInstall dependencies with your package manager, on Debian based distros run this as root:\r\n\r\n    apt-get install python-mutagen python-requests\r\n\r\n* Alternatively install the dependencies by using python-pip:\r\n`pip install mutagen requests`\r\n* Clone the git or download and unzip the [source package]\r\n(http://github.com/YetAnotherNerd/whatlastgenre/archive/master.zip)\r\n* Run it without install by using `./whatlastgenre` from the directory you\r\ncloned/extracted to\r\n* Install it by running `python setup.py install` as root in that directory\r\n\r\n\r\n## Configuration\r\nA configuration file with default values will be created on first run.\r\n\r\nThe default location for the configuration file is `~/.whatlastgenre/config`.\r\n\r\n### Example configuration file\r\n```\r\n[wlg]\r\nsources = whatcd, discogs, mbrainz, lastfm\r\ncache_timeout = 30\r\nwhatcduser = whatusername\r\nwhatcdpass = whatpassword\r\n[genres]\r\nlove = soundtrack\r\nhate = alternative, electronic, indie, pop, rock\r\nblacklist = charts, male vocalist, other\r\nfilters = instrument, label, location, name, year\r\n[scores]\r\nsrc_whatcd = 1.66\r\nsrc_lastfm = 0.66\r\nsrc_mbrainz = 1.00\r\nsrc_discogs = 1.00\r\nsrc_idiomag = 1.00\r\nsrc_echonest = 1.00\r\nartist = 1.33\r\nvarious = 0.66\r\nsplitup = 0.33\r\n```\r\n\r\n### Configuration options explained\r\n\r\n#### whatlastgenre (wlg) section\r\n\r\n##### sources option\r\nThe music sites/data providers where to get the tags from. Will be called in\r\nthe order you named them, since lastfm supports search by MBIDs make sure to\r\nmention mbrainz before lastfm. You should generally mention sources with good\r\nspelled tags (eg. sources with a fixed set of possible genres) before sources\r\nwith misspelled tags (eg. lastfm user tags) to avoid getting malformed tags.\r\nDisabling music sites is not recommended, the more sources the better tags.\r\n* `whatcd` [[URL](https://what.cd/)]\r\nwell-kept tags from users\r\n* `lastfm` [[URL](http://www.last.fm/)]\r\nmbid search possible, many personal tags from users\r\n* `mbrainz` [[URL](http://musicbrainz.org/)]\r\nhome of mbids\r\n* `discogs` [[URL](http://www.idiomag.com/)]\r\nalbum search only, fixed list of [genres](http://www.discogs.com/help/submission-guidelines-release-genres-styles.html) and [styles](http://wiki.discogs.com/index.php/Style_Guide)\r\n* `idiomag` [[URL](http://www.idiomag.com/)]\r\nartist search only\r\n* `echonest` [[URL](http://echonest.com/)]\r\nartist search only, fixed list of [genres](http://developer.echonest.com/docs/v4/artist.html#list-genres)\r\n\r\n##### cache_timout option\r\nTime in days after which cache hits get invalid.\r\nDefault `30`, Range `3 - 90`\r\n\r\n#### genres section\r\n\r\n##### love and hate options\r\nList of tags that get a multiplier bonus of `2.0` and `0.5` respectively.\r\nShould be considered as \"soft white-/blacklist\" where you can in-/decrease the\r\noccurrence of specific tags that you don't like or that are too inaccurate for\r\nyou without fully banning them like with the blacklist option.\r\n\r\n##### filters option\r\nUse this to activate filters for specific tag groups:\r\n* `instrument` instrument related names, like piano or guitarist\r\n* `label` label names\r\n* `location` country, city and nationality names\r\n* `name` person names\r\n* `year` year tags, like 1980s\r\n\r\n#### scores section\r\n\r\n##### src_* options\r\nEvery source has its own score multiplier, so music sites that generally\r\nprovide higher quality tags can be given advantage over sources that often\r\nprovide bad, inaccurate or personal tags. Increase if you trust the tags from\r\na source, lower if the source provides many inaccurate or personal tags. If you\r\ndon't want tags from a specific source remove it from the sources list option.\r\nDefault `1.0`, Range `0.5 - 2.0`. See sources option above.\r\n\r\n##### artist option\r\nScore multiplier to give tags found by albumartist searches advantage over tags\r\nfrom album searches. The tags get stored separately at first but then put\r\ntogether while taking this multiplier into account. This enables that multiple\r\nalbums from one artist get more equal tags.\r\nDefault `1.33`, Range `0.5 - 2.0`\r\n* `< 1.0` prefer album tags\r\n* `= 1.0` handle them equally\r\n* `> 1.0` prefer artist tags\r\n\r\n##### various option\r\nScore multiplier similar to artist option, but this one applies to various\r\nartists releases if there is no albumartist and all the track artists get used\r\nfor searching.\r\nDefault `0.66`, Range `0.1 - 1.0`\r\n* `< 1.0` prefer album tags\r\n* `= 1.0` handle them equally\r\n\r\n##### splitup option\r\nScore multiplier for modifying the score of the base tag from a tag that got\r\nsplit up by space, this enables you to decide whether to keep, prefer or ban\r\nthe base tags. For example, lets say we have 'Alternative Rock' with a score\r\nof 1: It will end up as Alternative with score 1, Rock with score 1 and\r\nAlternative Rock with score `1 * <splitup-score>`. So if you don't want to keep\r\nAlternative Rock, just set it to 0, but consider using a very small number\r\ninstead to avoid banning them totally.\r\nDefault `0.33`, Range `0.0 - 1.0`\r\n* `= 0.0` forget about the \"base\" tags\r\n* `< 1.0` prefer split parts\r\n* `= 1.0` handle them equally\r\n\r\n\r\n## Usage\r\n```\r\nusage: whatlastgenre [-h] [-v] [-n] [-c] [-i] [-r] [-m] [-l N]\r\n                     [--config CONFIG] [--cache CACHE]\r\n                     path [path ...]\r\n\r\npositional arguments:\r\n  path                 folder(s) to scan for albums\r\n\r\noptional arguments:\r\n  -h, --help           show this help message and exit\r\n  -v, --verbose        more detailed output (default: False)\r\n  -n, --dry            don't save metadata (default: False)\r\n  -i, --interactive    interactive mode (default: False)\r\n  -c, --cacheignore    ignore cache hits (default: False)\r\n  -r, --tag-release    tag release type (from What) (default: False)\r\n  -m, --tag-mbids      tag musicbrainz ids (default: False)\r\n  -l N, --tag-limit N  max. number of genre tags (default: 4)\r\n  --config CONFIG      location of the configuration file\r\n                       (default: ~/.whatlastgenre/config)\r\n  --cache CACHE        location of the cache file\r\n                       (default: ~/.whatlastgenre/cache)\r\n```\r\n\r\nIf you seriously want to tag release-types `-r` or musicbrainz-ids `-m` you\r\nshould also enable interactive mode `-i`. Consider to save the MBIDs `-m` when\r\nusing mbrainz, you searched for them, why not save them? ;)\r\n\r\nI recommend first doing a dry-run to fill the cache and then doing a normal\r\nrun with interactivity enabled. This way you can answer all interactivity\r\nquestions without much waiting time in between.\r\n\r\nRemove the cache file to reset the cache. If you only want to reset the cache\r\nfor specific albums rerun with `-c` on this albums to ignore cache hits.\r\n\r\n### Examples\r\n\r\nDo a verbose dry-run on your albums in /home/user/music changing nothing:\r\n\r\n\t$ whatlastgenre -vn /home/user/music\r\n\r\nTag max. 3 genre tags for all albums in /home/user/music:\r\n\r\n\t$ whatlastgenre -l 3 /home/user/music\r\n\r\nTo get the most of it for all albums in /home/user/music and /media/music:\r\n\r\n\t$ whatlastgenre -irml 5 /home/user/music /media/music\r\n\r\n\r\n\r\nwhatlastgenre doesn't correct any other tags. If your music files are badly or\r\nnot tagged, whatlastgenre won't work well at all.\r\n\r\nPlease report any bugs and errors you encounter, i would like to fix them :)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}