{"name":"whatlastgenre","tagline":"Improves genre-metadata of audio-files based on tags from various music-sites.","body":"# whatlastgenre\r\n\r\nImproves genre metadata of audio files based on tags from various music-sites.\r\n\r\n* Supported audio files: flac, ogg, mp3\r\n* Supported music-sites: What.CD, Last.FM, MusicBrainz, Discogs\r\n* Feature Overview\r\n\t* Gets genretags from music sites and splits, merges, scores and filters them.\r\n\t\t* Splitting, eg. Jazz+Funk -> Jazz, Funk; Rock/Pop -> Rock, Pop\r\n\t\t* Merges similar tags in different writings, eg. DnB, D&B, Drum and Bass -> Drum & Bass\r\n\t\t* Scores them with different methods, can take personal preferences into account\r\n\t\t* Filters them by personal preferences and preset or custom filters\r\n\t* Optional: writes release type (Album, EP, Anthology, ...) (from What.CD)\r\n\t* Optional: writes MusicBrainz IDs\r\n\t* Optional: caches already proceeded albums to speed things up next time\r\n\t* Makes use of MusicBrainz IDs when possible\r\n\t* Interactive mode, especially for releasetypes and mbids (it's not guessing wrong data)\r\n\t\t* Progressive fuzzy matching to reduce needed user input\r\n\t\t* eg. MusicBrainz: Trys to identify artists by looking at its albums \r\n\t* Dry-mode for safe testing\r\n\r\n## How it works\r\nIt scans through folders for albums and receives genre tags for this releases\r\nand their artists from different music-sites. The tags get scored and put\r\ntogether, then the best scored tags will be saved as genre metadata in the\r\ncorresponding album tracks. If a tag is supplied from more then one source,\r\ntheir individual scores will be summed up. Equal tags in different writings\r\nwill be merged together.\r\n\r\n### Tags scoring with count (Last.FM, MusicBrainz, What.CD partially)\r\nIf counts are supplied for the tags, they will get scored by `count/topcount`,\r\nwhere `topcount` is the highest count of all tags from a source. So the top\r\ntag gets a score of 1.0, a tag having only half of the top tag's count gets a\r\nscore of 0.5 and so on. \r\n\r\n### Tags scoring without count (Discogs, What.CD partially)\r\nTags supplied without a count will be scored `0.85^(n-1)`, where `n` is the\r\ntotal number of tags supplied by this source. The more tags the lower the\r\nscore for each tag will be. So if only one tag is supplied, it will get a\r\nscore of 1.0, two tags will get a score of 0.85 each, three get 0.72 each\r\nand so on...\r\n\r\n### Score multiplier/modifier\r\n\r\n#### Score multiplier for different sources\r\nEvery source (What.CD, Last.FM, MusicBrainz, Discogs) has its own score\r\nmultiplier, so sources that generally provide higher quality tags can be given\r\nadvantage over sources that often provide bad, inaccurate or personal tags.\r\n\r\n#### Artist score multiplier\r\nThere is an extra multiplier for tags gathered by searching for the artist to\r\ngive the possibility to have multiple albums of one artist have more equal tags.\r\n\r\n#### Personal score modifiers\r\nOne can set a list of tags that will get an initial score offset and\r\nmultiplier bonus. Consider this as some kind of \"soft\" white-/blacklist, where\r\nyou can reduce the occurrence of hated or inaccurate tags without fully\r\nbanning them. See Configuration for more details.\r\n\r\n\r\nIf you have any ideas on improving this scoring, please let me know :)\r\n\r\n\r\n## Installation\r\n\r\n\t$ python setup.py install\r\n\r\n### Dependencies\r\n* musicbrainzngs\r\n* mutagen\r\n* requests\r\n\r\n\r\n## Configuration\r\n\r\nAn empty configuration file will be created on the first run. The score\r\nmodifiers/multipliers for sources and score_{up,down} can be tuned in the\r\nsource, but act with caution.\r\n\r\n### Example configuration file\r\n\t[whatcd]\r\n\tusername = whatuser\r\n\tpassword = myscretwhatcdpassword\r\n\t[genres]\r\n\tblacklist = charts, composer, live, unknown\r\n\tscore_up = soundtrack\r\n\tscore_down = electronic, alternative, indie, other, other\r\n\tfilters = label, location, year\r\n\r\n\r\n### Configuration options explained\r\n\r\n#### genres section\r\n\r\n##### score_up, score_down option\r\nThis should be considered as \"soft\" white-/blacklist where you can in-/decrease\r\nthe occurrence of specific tags that you don't like or that are too inaccurate\r\nfor you without fully banning them like with the blacklist option. Tags listed\r\nhere will get an initial score offset and a score multiplier bonus of `+/-0.25`\r\nper default, to boost this even more, just mention them more then once.\r\n\r\n##### filters\r\nUse this to activate filtering of specific tag groups from genres:\r\n* label: filters label names\r\n* location: filters country, city and nationality names\r\n* year: filters year tags, like 1980s\r\n* create your own filter lists by adding filter sections to the tags.txt file\r\n\r\nConsider custom filter lists as large blacklists.\r\n\r\n\r\n## Usage\r\n\t  \r\n\tusage: whatlastgenre.py [-h] [-v] [-n] [-i] [-r] [-m] [-c] [-l N]\r\n\t                        [--no-whatcd] [--no-lastfm] [--no-mbrainz]\r\n\t                        [--no-discogs] [--config CONFIG] [--cache CACHE]\r\n\t                        path [path ...]\r\n\t\r\n\tpositional arguments:\r\n\t  path                 folder(s) to scan for albums\r\n\t\r\n\toptional arguments:\r\n\t  -h, --help           show this help message and exit\r\n\t  -v, --verbose        more detailed output (default: False)\r\n\t  -n, --dry-run        don't save metadata (default: False)\r\n\t  -i, --interactive    interactive mode (default: False)\r\n\t  -r, --tag-release    tag release type (from what.cd) (default: False)\r\n\t  -m, --tag-mbids      tag musicbrainz ids (default: False)\r\n\t  -c, --use-cache      cache processed albums (default: False)\r\n\t  -l N, --tag-limit N  max. number of genre tags (default: 4)\r\n\t  --no-whatcd          disable lookup on What.CD (default: False)\r\n\t  --no-lastfm          disable lookup on Last.FM (default: False)\r\n\t  --no-mbrainz         disable lookup on MusicBrainz (default: False)\r\n\t  --no-discogs         disable lookup on Discogs (default: False)\r\n\t  --config CONFIG      location of the configuration file (default: /home/foo/.whatlastgenre/config)\r\n\t  --cache CACHE        location of the cache (default: /home/foo/.whatlastgenre/cache)\r\n\r\n\r\nIf you seriously want to tag release-types (-r) or musicbrainz-ids (-m) you\r\nshould also enable interactive-mode (-i). Consider to save the mbids (-m) when\r\nnot using --no-mbrainz, you searched for them, why not save them? ;)\r\nThink about using the cache feature (-c) if you have a large set of albums to\r\nspeed up things next time. Disabling music-sites is not recommended, the more\r\nsources, the better tags.\r\n\r\n\r\n## Examples\r\n\r\nDo a verbose dry-run on your albums in /home/user/music changing nothing:\r\n\r\n\t$ whatlastgenre.py -vn /home/user/music\r\n\r\nTag max. 3 genre tags for all albums in /home/user/music:\r\n\r\n\t$ whatlastgenre.py -cl 3 /home/user/music\r\n\r\nTo get the most of it for all albums in /media/music:\r\n\r\n\t$ whatlastgenre.py -cirml 5 /media/music\r\n\t\r\nJust tag release-types and mbids (this is not intended) on /media/music:\r\n\r\n\t$ whatlastgenre.py -cirml 0 --no-lastfm --no-discogs /media/music\r\n\r\n\r\n## How to help\r\n\r\nThanks for being interested in helping to improve it :)\r\nThings you can tell me about:\r\n* Tag that are similar but haven't been merged or naming inconsistencies, e.g. 'Trip Hop' <-> 'Trip-Hop'\r\n* If your unhappy with the tag result for some albums\r\n* Any errors of course ;)\r\n\r\nOr just paste me the output so i can take a look on it for scoring improvements.\r\nI'm also happy for any other suggestions :)\r\n\r\n### Ended up with a tag that shouldn't be there?\r\n* If it's an impartial correct tag, just use score_down or blacklist to get\r\nrid of it.\r\n* If it's a label or county tag that should have been filtered, please name\r\nit to me so i can add it to the tags.txt file (do it yourself until i did it).\r\n* If the tag is personal, crappy or somehow else bad, just rerun the script\r\nwith `whatlastgenre.py -vn /path/to/album/with/bad/genre > wlg.log`\r\nand send me the `wlg.log`, i'll try to improve the scoring.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}